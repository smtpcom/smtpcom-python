# coding: utf-8

"""
    SMTP Public API overview

    SMTP.com Public API v4  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Contact: support@smtp.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import smtp
from smtp.models.inline_object import InlineObject  # noqa: E501
from smtp.rest import ApiException

class TestInlineObject(unittest.TestCase):
    """InlineObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineObject
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = smtp.models.inline_object.InlineObject()  # noqa: E501
        if include_optional :
            return InlineObject(
                channel = '0', 
                recipients = smtp.models.V4MessagesRecipients(
                    to = [
                        smtp.models.V4MessagesRecipientsTo(
                            name = '0', 
                            address = '0', )
                        ], 
                    cc = [
                        smtp.models.V4MessagesRecipientsTo(
                            name = '0', 
                            address = '0', )
                        ], 
                    bcc = [
                        smtp.models.V4MessagesRecipientsTo(
                            name = '0', 
                            address = '0', )
                        ], 
                    bulk_list = [
                        smtp.models.V4MessagesRecipientsTo(
                            name = '0', 
                            address = '0', )
                        ], ), 
                originator = smtp.models.V4MessagesOriginator(
                    _from = smtp.models.V4MessagesRecipientsTo(
                        name = '0', 
                        address = '0', ), 
                    reply_to = smtp.models.V4MessagesRecipientsTo(
                        name = '0', 
                        address = '0', ), ), 
                custom_headers = None, 
                subject = '0', 
                body = smtp.models.V4MessagesBody(
                    parts = [
                        smtp.models.V4MessagesBodyParts(
                            version = '0', 
                            type = '0', 
                            charset = '0', 
                            encoding = '0', 
                            content = '0', )
                        ], 
                    attachments = [
                        smtp.models.V4MessagesBodyAttachments(
                            version = '0', 
                            type = '0', 
                            disposition = '0', 
                            filename = '0', 
                            cid = '0', 
                            content = '0', )
                        ], )
            )
        else :
            return InlineObject(
        )

    def testInlineObject(self):
        """Test InlineObject"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
