# coding: utf-8

"""
    SMTP Public API overview

    SMTP.com Public API v4  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Contact: support@smtp.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import smtp
from smtp.models.inline_object1 import InlineObject1  # noqa: E501
from smtp.rest import ApiException

class TestInlineObject1(unittest.TestCase):
    """InlineObject1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineObject1
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = smtp.models.inline_object1.InlineObject1()  # noqa: E501
        if include_optional :
            return InlineObject1(
                mime = '0', 
                channel = '0', 
                recipients = smtp.models._v4_messages_mime_recipients._v4_messages_mime_recipients(
                    to = [
                        smtp.models._v4_messages_recipients_to._v4_messages_recipients_to(
                            name = '0', 
                            address = '0', )
                        ], 
                    cc = [
                        smtp.models._v4_messages_recipients_to._v4_messages_recipients_to(
                            name = '0', 
                            address = '0', )
                        ], 
                    bcc = [
                        smtp.models._v4_messages_recipients_to._v4_messages_recipients_to(
                            name = '0', 
                            address = '0', )
                        ], 
                    bulk_list = [
                        smtp.models._v4_messages_recipients_to._v4_messages_recipients_to(
                            name = '0', 
                            address = '0', )
                        ], ), 
                originator = smtp.models._v4_messages_originator._v4_messages_originator(
                    _from = smtp.models._v4_messages_recipients_to._v4_messages_recipients_to(
                        name = '0', 
                        address = '0', ), 
                    reply_to = smtp.models._v4_messages_recipients_to._v4_messages_recipients_to(
                        name = '0', 
                        address = '0', ), )
            )
        else :
            return InlineObject1(
        )

    def testInlineObject1(self):
        """Test InlineObject1"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
