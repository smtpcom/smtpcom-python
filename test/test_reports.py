# coding: utf-8

"""
    SMTP Public API overview

    SMTP.com Public API v4  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Contact: support@smtp.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import smtpcom
from smtpcom.models.reports import Reports  # noqa: E501
from smtpcom.rest import ApiException

class TestReports(unittest.TestCase):
    """Reports unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Reports
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = smtpcom.models.reports.Reports()  # noqa: E501
        if include_optional :
            return Reports(
                status = '0', 
                data = smtpcom.models.reports_data.ReportsData(
                    periodic = [
                        smtpcom.models.reports_data_periodic.ReportsDataPeriodic(
                            frequency = 'monthly', 
                            report_id = '0', 
                            events = '0', 
                            channel = '0', 
                            report_time = '0', )
                        ], 
                    ondemand = [
                        smtpcom.models.reports_data_ondemand.ReportsDataOndemand(
                            status = 'in_progress', 
                            name = '0', 
                            url = '0', 
                            time_req = 56, 
                            progress = 56, 
                            channel = '0', 
                            report_id = '0', )
                        ], )
            )
        else :
            return Reports(
        )

    def testReports(self):
        """Test Reports"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
