# coding: utf-8

"""
    SMTP Public API overview

    SMTP.com Public API v4  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Contact: support@smtp.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from smtp.configuration import Configuration


class MessagesResponseDataItems(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'msg_id': 'str',
        'msg_time': 'int',
        'channel': 'str',
        'smtp_vars': 'object',
        'msg_data': 'MessagesResponseDataMsgData',
        'details': 'MessagesResponseDataDetails',
        'opens': 'MessagesResponseDataOpens',
        'clicks': 'MessagesResponseDataClicks',
        'abuse': 'MessagesResponseDataAbuse',
        'unsubs': 'MessagesResponseDataUnsubs'
    }

    attribute_map = {
        'msg_id': 'msg_id',
        'msg_time': 'msg_time',
        'channel': 'channel',
        'smtp_vars': 'smtp_vars',
        'msg_data': 'msg_data',
        'details': 'details',
        'opens': 'opens',
        'clicks': 'clicks',
        'abuse': 'abuse',
        'unsubs': 'unsubs'
    }

    def __init__(self, msg_id=None, msg_time=None, channel=None, smtp_vars=None, msg_data=None, details=None, opens=None, clicks=None, abuse=None, unsubs=None, local_vars_configuration=None):  # noqa: E501
        """MessagesResponseDataItems - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._msg_id = None
        self._msg_time = None
        self._channel = None
        self._smtp_vars = None
        self._msg_data = None
        self._details = None
        self._opens = None
        self._clicks = None
        self._abuse = None
        self._unsubs = None
        self.discriminator = None

        if msg_id is not None:
            self.msg_id = msg_id
        if msg_time is not None:
            self.msg_time = msg_time
        if channel is not None:
            self.channel = channel
        if smtp_vars is not None:
            self.smtp_vars = smtp_vars
        if msg_data is not None:
            self.msg_data = msg_data
        if details is not None:
            self.details = details
        if opens is not None:
            self.opens = opens
        if clicks is not None:
            self.clicks = clicks
        if abuse is not None:
            self.abuse = abuse
        if unsubs is not None:
            self.unsubs = unsubs

    @property
    def msg_id(self):
        """Gets the msg_id of this MessagesResponseDataItems.  # noqa: E501

        Unique message ID  # noqa: E501

        :return: The msg_id of this MessagesResponseDataItems.  # noqa: E501
        :rtype: str
        """
        return self._msg_id

    @msg_id.setter
    def msg_id(self, msg_id):
        """Sets the msg_id of this MessagesResponseDataItems.

        Unique message ID  # noqa: E501

        :param msg_id: The msg_id of this MessagesResponseDataItems.  # noqa: E501
        :type msg_id: str
        """

        self._msg_id = msg_id

    @property
    def msg_time(self):
        """Gets the msg_time of this MessagesResponseDataItems.  # noqa: E501

        Time at which the message was sent  # noqa: E501

        :return: The msg_time of this MessagesResponseDataItems.  # noqa: E501
        :rtype: int
        """
        return self._msg_time

    @msg_time.setter
    def msg_time(self, msg_time):
        """Sets the msg_time of this MessagesResponseDataItems.

        Time at which the message was sent  # noqa: E501

        :param msg_time: The msg_time of this MessagesResponseDataItems.  # noqa: E501
        :type msg_time: int
        """

        self._msg_time = msg_time

    @property
    def channel(self):
        """Gets the channel of this MessagesResponseDataItems.  # noqa: E501

        Name of the channel on which the message was sent  # noqa: E501

        :return: The channel of this MessagesResponseDataItems.  # noqa: E501
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this MessagesResponseDataItems.

        Name of the channel on which the message was sent  # noqa: E501

        :param channel: The channel of this MessagesResponseDataItems.  # noqa: E501
        :type channel: str
        """

        self._channel = channel

    @property
    def smtp_vars(self):
        """Gets the smtp_vars of this MessagesResponseDataItems.  # noqa: E501

        Custom parameters and their value echoed back from `X-SMTPAPI` header's `unique_args` parameter  # noqa: E501

        :return: The smtp_vars of this MessagesResponseDataItems.  # noqa: E501
        :rtype: object
        """
        return self._smtp_vars

    @smtp_vars.setter
    def smtp_vars(self, smtp_vars):
        """Sets the smtp_vars of this MessagesResponseDataItems.

        Custom parameters and their value echoed back from `X-SMTPAPI` header's `unique_args` parameter  # noqa: E501

        :param smtp_vars: The smtp_vars of this MessagesResponseDataItems.  # noqa: E501
        :type smtp_vars: object
        """

        self._smtp_vars = smtp_vars

    @property
    def msg_data(self):
        """Gets the msg_data of this MessagesResponseDataItems.  # noqa: E501


        :return: The msg_data of this MessagesResponseDataItems.  # noqa: E501
        :rtype: MessagesResponseDataMsgData
        """
        return self._msg_data

    @msg_data.setter
    def msg_data(self, msg_data):
        """Sets the msg_data of this MessagesResponseDataItems.


        :param msg_data: The msg_data of this MessagesResponseDataItems.  # noqa: E501
        :type msg_data: MessagesResponseDataMsgData
        """

        self._msg_data = msg_data

    @property
    def details(self):
        """Gets the details of this MessagesResponseDataItems.  # noqa: E501


        :return: The details of this MessagesResponseDataItems.  # noqa: E501
        :rtype: MessagesResponseDataDetails
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this MessagesResponseDataItems.


        :param details: The details of this MessagesResponseDataItems.  # noqa: E501
        :type details: MessagesResponseDataDetails
        """

        self._details = details

    @property
    def opens(self):
        """Gets the opens of this MessagesResponseDataItems.  # noqa: E501


        :return: The opens of this MessagesResponseDataItems.  # noqa: E501
        :rtype: MessagesResponseDataOpens
        """
        return self._opens

    @opens.setter
    def opens(self, opens):
        """Sets the opens of this MessagesResponseDataItems.


        :param opens: The opens of this MessagesResponseDataItems.  # noqa: E501
        :type opens: MessagesResponseDataOpens
        """

        self._opens = opens

    @property
    def clicks(self):
        """Gets the clicks of this MessagesResponseDataItems.  # noqa: E501


        :return: The clicks of this MessagesResponseDataItems.  # noqa: E501
        :rtype: MessagesResponseDataClicks
        """
        return self._clicks

    @clicks.setter
    def clicks(self, clicks):
        """Sets the clicks of this MessagesResponseDataItems.


        :param clicks: The clicks of this MessagesResponseDataItems.  # noqa: E501
        :type clicks: MessagesResponseDataClicks
        """

        self._clicks = clicks

    @property
    def abuse(self):
        """Gets the abuse of this MessagesResponseDataItems.  # noqa: E501


        :return: The abuse of this MessagesResponseDataItems.  # noqa: E501
        :rtype: MessagesResponseDataAbuse
        """
        return self._abuse

    @abuse.setter
    def abuse(self, abuse):
        """Sets the abuse of this MessagesResponseDataItems.


        :param abuse: The abuse of this MessagesResponseDataItems.  # noqa: E501
        :type abuse: MessagesResponseDataAbuse
        """

        self._abuse = abuse

    @property
    def unsubs(self):
        """Gets the unsubs of this MessagesResponseDataItems.  # noqa: E501


        :return: The unsubs of this MessagesResponseDataItems.  # noqa: E501
        :rtype: MessagesResponseDataUnsubs
        """
        return self._unsubs

    @unsubs.setter
    def unsubs(self, unsubs):
        """Sets the unsubs of this MessagesResponseDataItems.


        :param unsubs: The unsubs of this MessagesResponseDataItems.  # noqa: E501
        :type unsubs: MessagesResponseDataUnsubs
        """

        self._unsubs = unsubs

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MessagesResponseDataItems):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MessagesResponseDataItems):
            return True

        return self.to_dict() != other.to_dict()
